# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.7
  heroku: circleci/heroku@1.2.6

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build_test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: cimg/node:16.2.0
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - node/install-packages:
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm
      - run:
          name: Audit
          command: npm audit
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Run tests
          command: npm test
      - run:
          name: Build app
          command: npm run build
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
  deploy:
    machine: true
    steps:
      - checkout
      - run:
          name: Build & push Docker image to Heroku
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push -a bw-cicd-test-app web
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a bw-cicd-test-app web

  # deploy:
  # docker:
  #   - image: cimg/node:16.2.0
  # executor: heroku/default
  # steps:
  #   - attach_workspace:
  #       at: ~/project
  #   - heroku/deploy-via-git:
  #       force: true

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  build_test_deploy:
    jobs:
      - build_test
      - deploy
        # requires:
        #   - build_test
        # filters:
        #   branches:
        #     only: master
